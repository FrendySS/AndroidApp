image: ghcr.io/cirruslabs/android-sdk:34

stages:
  - setup
  - test
  - build

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  ANDROID_BUILD_TOOLS: "34.0.0"
  CI_DEBUG_TRACE: "true"

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/wrapper
    - .gradle/caches
    - build/

before_script:
  - export GRADLE_USER_HOME="${CI_PROJECT_DIR}/.gradle"
  - mkdir -p "$GRADLE_USER_HOME"
  - chmod -R 777 "$GRADLE_USER_HOME"
  - chmod +x ./gradlew
  - echo "sdk.dir=${ANDROID_HOME}" > local.properties
  - yes | sdkmanager --licenses || true
  - sdkmanager "platform-tools" "platforms;android-34" "build-tools;${ANDROID_BUILD_TOOLS}"

setup:
  stage: setup
  script:
    - ./gradlew --version
    - ./gradlew dependencies --no-daemon --stacktrace
  artifacts:
    paths:
      - .gradle/
    expire_in: 1 week

test:
  stage: test
  script:
    - ./gradlew clean testDebugUnitTest --no-daemon --stacktrace --continue || echo "Tests failed but continuing"
    - mkdir -p test-reports
    - find app/build/test-results -name "TEST-*.xml" -exec cp {} test-reports/ \; || echo "No test reports found"
    - ls -la test-reports/ || echo "No test reports directory"
  artifacts:
    when: always
    reports:
      junit: "test-reports/TEST-*.xml"
    paths:
      - test-reports/
    expire_in: 1 week

build:
  stage: build
  script:
    - ./gradlew clean assembleRelease --no-daemon --stacktrace --scan
    - ls -la app/build/outputs/apk/release/ || echo "No APK files found"
  artifacts:
    paths:
      - app/build/outputs/apk/release/*.apk
      - app/build/outputs/mapping/release/mapping.txt
    expire_in: 1 week
  only:
    - main
    - tags
  dependencies:
    - test

after_script:
  - rm -f local.properties
  - ./gradlew --stop